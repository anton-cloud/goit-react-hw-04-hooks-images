{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItemStyled.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGalleryStyled.js","components/imageGallery/ImageGallery.js","components/searchbar/SearchbarStyled.js","components/searchbar/Searchbar.js","components/services/api.js","components/AppStyled.js","components/button/ButtonStyled.js","components/button/Button.js","components/modal/ModalStyled.js","components/modal/Modal.js","components/loader/LoaderComponentStyled.js","components/loader/LoaderComponent.js","components/App.js","styles/GlobalStyles.js","index.js"],"names":["ImageGalleryItemStyled","styled","li","ImageGalleryItem","image","onOpenModal","src","webformatURL","alt","tags","className","onClick","largeImageURL","ImageGalleryStyled","ul","ImageGallery","images","map","id","SearchbarStyled","header","Searchbar","onSubmit","useState","searchImg","searchImgState","e","preventDefault","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","API_KEY","fetchImages","page","axios","get","AppStyled","div","ButtonStyled","button","Button","onLoadMore","ModalStyled","modalRoot","document","querySelector","Modal","onCloseModal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","LoaderComponentStyled","LoaderComponent","color","height","width","App","setSearchImg","setImages","largeImage","setLargeImage","setError","setPage","isLoading","setIsLoading","showModal","setShowModal","then","result","data","hits","prev","catch","error","finally","Number","isInteger","length","scrollTo","top","documentElement","scrollHeight","behavior","memo","createGlobalStyle","ReactDOM","render","GlobalStyles","getElementById"],"mappings":"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","file":"static/js/main.a8d745e0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ImageGalleryItemStyled = styled.li `\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n.ImageGalleryItem-image {\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  \r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n}\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { ImageGalleryItemStyled } from './ImageGalleryItemStyled';\r\n\r\nconst ImageGalleryItem = ({image, onOpenModal}) => {\r\n  return (\r\n    <ImageGalleryItemStyled>\r\n      <img src={image.webformatURL} alt={image.tags}  className=\"ImageGalleryItem-image\" onClick = {() => onOpenModal(image.largeImageURL)}/>\r\n    </ImageGalleryItemStyled>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object,\r\n  onOpenModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const ImageGalleryStyled = styled.ul `\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem';\r\nimport { ImageGalleryStyled } from './ImageGalleryStyled';\r\n\r\n\r\nconst ImageGallery = ({images, onOpenModal}) => {\r\n  return (\r\n    <ImageGalleryStyled>\r\n      {images.map((image) => <ImageGalleryItem image = {image} onOpenModal = {onOpenModal} key = {image.id}/>)}\r\n    </ImageGalleryStyled>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onOpenModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchbarStyled = styled.header `\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n  0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n.SearchForm {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n\r\n.SearchForm-button {\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.SearchForm-button:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.SearchForm-button-label {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n\r\n.SearchForm-input {\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n.SearchForm-input::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n\r\n`","import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { SearchbarStyled } from './SearchbarStyled';\r\n\r\n\r\nconst Searchbar = ({onSubmit}) => {\r\n\r\n  const [searchImg, searchImgState] = useState(\"\");\r\n\r\n  const onHandleChange = (e) => {\r\n    const {value} = e.target;\r\n    searchImgState(value)\r\n  }\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault()\r\n    onSubmit(searchImg);\r\n    searchImgState('');\r\n  }\r\n\r\n  return (\r\n    <SearchbarStyled>\r\n      <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\r\n       <button type=\"submit\" className=\"SearchForm-button\">\r\n        <span className=\"SearchForm-button-label\">Search</span>\r\n       </button>\r\n\r\n      <input\r\n        className=\"SearchForm-input\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"  \r\n        autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        name='searchImg'\r\n        value={searchImg}\r\n        onChange={onHandleChange}\r\n      />\r\n      </form>\r\n    </SearchbarStyled>  \r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n\r\n\r\n// const initialState = {\r\n//   searchImg: '',\r\n// }\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     ...initialState,\r\n//   }\r\n\r\n//   onHandleChange = (e) => {\r\n//     const {name,value} = e.target;\r\n//     this.setState({\r\n//       [name]:value,\r\n//     })\r\n//   }\r\n\r\n//   onHandleSubmit = (e) => {\r\n//     e.preventDefault()\r\n//     this.props.onSubmit(this.state.searchImg);\r\n//     this.setState({\r\n//       ...initialState\r\n//     })\r\n//   }\r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <SearchbarStyled>\r\n//       <form className=\"SearchForm\" onSubmit={this.onHandleSubmit}>\r\n//        <button type=\"submit\" className=\"SearchForm-button\">\r\n//         <span className=\"SearchForm-button-label\">Search</span>\r\n//        </button>\r\n\r\n//       <input\r\n//         className=\"SearchForm-input\"\r\n//         type=\"text\"\r\n//         autoComplete=\"off\"  \r\n//         autoFocus\r\n//         placeholder=\"Search images and photos\"\r\n//         name='searchImg'\r\n//         value={this.state.searchImg}\r\n//         onChange={this.onHandleChange}\r\n//       />\r\n//       </form>\r\n//     </SearchbarStyled>  \r\n//     );\r\n//   }\r\n// }\r\n\r\n// Searchbar.propTypes = {\r\n//   onSubmit: PropTypes.func,\r\n// };\r\n\r\n// export default Searchbar;","import axios from \"axios\";\r\n\r\nconst API_KEY = '22368183-bf812a4cdd1e1ebd2a0bd646c';\r\n\r\nexport const fetchImages = (searchImg, page = 1 ) => {\r\n  return axios.get(`https://pixabay.com/api/?q=${searchImg}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n}\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const AppStyled = styled.div `\r\n  /* display: grid; */\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonStyled = styled.button `\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n  0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n&:hover,\r\n&:focus {\r\n  background-color: #303f9f;\r\n}\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonStyled } from './ButtonStyled';\r\n\r\nconst Button = ({onLoadMore}) => {\r\n  return (\r\n    <div className='WrapperForBtn'>\r\n      <ButtonStyled type = 'button' onClick={onLoadMore}>Load more</ButtonStyled>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func,\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\r\n\r\nexport const ModalStyled = styled.div `\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n\r\n.Modal {\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n}\r\n\r\n`","import {useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {createPortal} from 'react-dom'\r\nimport { ModalStyled } from './ModalStyled';\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nconst Modal = ({onCloseModal, children}) => {\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n  return () => {\r\n    window.removeEventListener('keydown', handleKeyDown);\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleKeyDown = (e) => {\r\n    if(e.code === 'Escape') {\r\n      onCloseModal()\r\n    }\r\n  }\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if(e.currentTarget === e.target) {\r\n      onCloseModal()\r\n    }\r\n  }\r\n\r\n  return createPortal (\r\n            <ModalStyled onClick = {handleBackdropClick}>\r\n              <div className=\"Modal\">\r\n                {children}\r\n              </div>\r\n            </ModalStyled>, modalRoot\r\n          );\r\n}\r\n\r\nModal.propTypes = {\r\n  onCloseModal: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;\r\n\r\n// const modalRoot = document.querySelector(\"#modal-root\");\r\n\r\n// class Modal extends Component {\r\n//   state = {  }\r\n\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n    \r\n//   }\r\n\r\n//   handleKeyDown = (e) => {\r\n//     if(e.code === 'Escape') {\r\n//       this.props.onCloseModal()\r\n//     }\r\n//   }\r\n\r\n//   handleBackdropClick = (e) => {\r\n//     if(e.currentTarget === e.target) {\r\n//       this.props.onCloseModal()\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return createPortal (\r\n//       <ModalStyled onClick = {this.handleBackdropClick}>\r\n//         <div className=\"Modal\">\r\n//           {this.props.children}\r\n//         </div>\r\n//       </ModalStyled>, modalRoot\r\n//     );\r\n//   }\r\n// }\r\n\r\n// modalRoot.propTypes = {\r\n//   onCloseModal: PropTypes.func,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n\r\n// export default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const LoaderComponentStyled = styled.div `\r\n  text-align: center;\r\n`","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { LoaderComponentStyled } from './LoaderComponentStyled';\r\n\r\nconst LoaderComponent = () => {\r\n  return (\r\n   <LoaderComponentStyled> \r\n    <Loader\r\n      type=\"ThreeDots\" \r\n      color=\"#00BFFF\" \r\n      height={100}\r\n      width={100}\r\n    />\r\n  </LoaderComponentStyled>\r\n  );\r\n}\r\n\r\nexport default  LoaderComponent;\r\n\r\n\r\n\r\n\r\n","import { useState, useEffect, memo} from \"react\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\nimport { fetchImages } from \"./services/api\";\r\nimport { AppStyled } from './AppStyled.js';\r\nimport Button from './button/Button'\r\nimport Modal from \"./modal/Modal\";\r\nimport LoaderComponent from \"./loader/LoaderComponent\";\r\n\r\nconst App = () => {\r\n\r\n  const [searchImg, setSearchImg] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [largeImage, setLargeImage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!searchImg) {return};\r\n    setIsLoading(true);\r\n    fetchImages(searchImg).then(result => {\r\n      setImages(result.data.hits);\r\n      setPage(prev => prev + 1);\r\n    })\r\n    .catch((error) => setError(error))\r\n    .finally(() => setIsLoading(false))\r\n  }, [searchImg]);\r\n\r\n  const onSubmit = (searchImg) => {\r\n    if(searchImg !== '')\r\n    setSearchImg(searchImg)\r\n  }\r\n\r\n  const onLoadMore = () => {\r\n    setIsLoading(true);\r\n    fetchImages(searchImg, page).then(result => {\r\n      setImages(prev => [...prev, ...result.data.hits]);\r\n      setPage(prev => prev + 1);\r\n    })\r\n    .catch((error) => setError(error))\r\n    .finally(() => \r\n      window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    }),\r\n      setIsLoading(false)\r\n    )\r\n  }\r\n\r\n  const onOpenModal = (largeImage) => {\r\n    setShowModal(true);\r\n    setLargeImage(largeImage);\r\n  }\r\n\r\n  const onCloseModal = () => {\r\n    setShowModal(false);\r\n  }\r\n\r\n  return (\r\n      <AppStyled>\r\n        <Searchbar onSubmit={onSubmit}/>\r\n        {isLoading ? <LoaderComponent/> : <ImageGallery images={images} onOpenModal = {onOpenModal}/>}\r\n        {Number.isInteger(images.length / 12) && images.length > 0 && <Button onLoadMore={onLoadMore}/>}\r\n        {showModal && \r\n        <Modal onCloseModal = {onCloseModal}>\r\n          <img src={largeImage} alt=\"img\"/>\r\n        </Modal>}\r\n      </AppStyled>    \r\n  );\r\n}\r\n\r\nexport default memo(App);\r\n\r\n// const initialState = {\r\n//   searchImg: '',\r\n//   images:[],\r\n//   largeImage:'',\r\n//   error:'',\r\n//   page: 1,\r\n//   isLoading: false,\r\n//   showModal: false,\r\n// }\r\n\r\n// class App extends Component {\r\n//   state = { \r\n//     ...initialState\r\n//    }\r\n  \r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if(prevState.searchImg !== this.state.searchImg) {\r\n//       this.setState({isLoading: true})\r\n//       fetchImages(this.state.searchImg).then(result => this.setState(prev => ({\r\n//        images: result.data.hits, \r\n//        page: prev.page + 1,\r\n//       })))\r\n//       .catch((error) => this.state({\r\n//         error,\r\n//       }))\r\n//       .finally(() => this.setState({\r\n//         isLoading: false,\r\n//       }))\r\n//     }\r\n//   }\r\n\r\n//   onSubmit = (searchImg) => {\r\n//     if(searchImg !== '')\r\n//     this.setState({\r\n//       searchImg\r\n//     })\r\n//   }\r\n\r\n//   onLoadMore = () => {\r\n//     this.setState({isLoading: true})\r\n//     fetchImages(this.state.searchImg, this.state.page).then(result => this.setState(prev => ({\r\n//       images: [...prev.images, ...result.data.hits],\r\n//       page: prev.page + 1,  \r\n//     })))\r\n//     .catch((error) => this.setState({\r\n//       error,\r\n//     }))\r\n//     .finally(() => \r\n//       window.scrollTo({\r\n//       top: document.documentElement.scrollHeight,\r\n//       behavior: 'smooth',\r\n//     }),\r\n//       this.setState({isLoading: false,})\r\n//     )\r\n//   }\r\n\r\n//   onOpenModal = (largeImage) => {\r\n//     this.setState({\r\n//       showModal: true,\r\n//       largeImage,\r\n//     })\r\n//   }\r\n\r\n//   onCloseModal = () => {\r\n//     this.setState({\r\n//       showModal: false,\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n\r\n//    const {images, showModal, largeImage, isLoading} = this.state;\r\n\r\n//     return (\r\n//       <AppStyled>\r\n//         <Searchbar onSubmit={this.onSubmit}/>\r\n//         {isLoading ? <LoaderComponent/> : <ImageGallery images={images} onOpenModal = {this.onOpenModal}/>}\r\n//         {Number.isInteger(images.length / 12) && images.length > 0 && <Button onLoadMore={this.onLoadMore}/>}\r\n//         {showModal && \r\n//         <Modal onCloseModal = {this.onCloseModal}>\r\n//           <img src={largeImage} alt=\"img\"/>\r\n//         </Modal>}\r\n//       </AppStyled>    \r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport default createGlobalStyle `\r\n  html {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  overflow-x: hidden;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\r\n    Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;\r\n  color: #212121;\r\n  background-color: #fff;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.WrapperForBtn {\r\n  text-align: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n`;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <GlobalStyles/>\n    <App/>\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}