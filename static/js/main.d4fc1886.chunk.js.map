{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItemStyled.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGalleryStyled.js","components/imageGallery/ImageGallery.js","components/searchbar/SearchbarStyled.js","components/searchbar/Searchbar.js","services/api.js","components/AppStyled.js","components/button/ButtonStyled.js","components/button/Button.js","components/modal/ModalStyled.js","components/modal/Modal.js","components/loader/LoaderComponentStyled.js","components/loader/LoaderComponent.js","components/App.js","styles/GlobalStyles.js","index.js"],"names":["ImageGalleryItemStyled","styled","li","ImageGalleryItem","image","onOpenModal","src","webformatURL","alt","tags","className","onClick","largeImageURL","ImageGalleryStyled","ul","ImageGallery","images","map","id","SearchbarStyled","header","Searchbar","onSubmit","useState","searchImg","searchImgState","e","preventDefault","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","API_KEY","fetchImages","page","axios","get","AppStyled","div","ButtonStyled","button","Button","onLoadMore","ModalStyled","modalRoot","document","querySelector","modalScroll","overflowValue","positionValue","body","style","overflow","position","Modal","onCloseModal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","LoaderComponentStyled","LoaderComponent","color","height","width","App","setSearchImg","setImages","largeImage","setLargeImage","setError","setPage","isLoading","setIsLoading","showModal","setShowModal","then","result","data","hits","prev","catch","error","finally","Number","isInteger","length","scrollTo","top","documentElement","scrollHeight","behavior","createGlobalStyle","ReactDOM","render","GlobalStyles","getElementById"],"mappings":"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","file":"static/js/main.d4fc1886.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ImageGalleryItemStyled = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n  .ImageGalleryItem-image {\r\n    width: 100%;\r\n    height: 260px;\r\n    object-fit: cover;\r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    &:hover {\r\n      transform: scale(1.03);\r\n      cursor: zoom-in;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ImageGalleryItemStyled } from \"./ImageGalleryItemStyled\";\r\n\r\nconst ImageGalleryItem = ({ image, onOpenModal }) => {\r\n  return (\r\n    <ImageGalleryItemStyled>\r\n      <img\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onOpenModal(image.largeImageURL)}\r\n      />\r\n    </ImageGalleryItemStyled>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object,\r\n  onOpenModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ImageGalleryStyled = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\nimport { ImageGalleryStyled } from \"./ImageGalleryStyled\";\r\n\r\nconst ImageGallery = ({ images, onOpenModal }) => {\r\n  return (\r\n    <ImageGalleryStyled>\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          onOpenModal={onOpenModal}\r\n          key={image.id}\r\n        />\r\n      ))}\r\n    </ImageGalleryStyled>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onOpenModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchbarStyled = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  .SearchForm {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .SearchForm-button {\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n  }\r\n\r\n  .SearchForm-button:hover {\r\n    opacity: 1;\r\n  }\r\n\r\n  .SearchForm-button-label {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n  }\r\n\r\n  .SearchForm-input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n  }\r\n\r\n  .SearchForm-input::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SearchbarStyled } from \"./SearchbarStyled\";\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [searchImg, searchImgState] = useState(\"\");\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value } = e.target;\r\n    searchImgState(value);\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(searchImg);\r\n    searchImgState(\"\");\r\n  };\r\n\r\n  return (\r\n    <SearchbarStyled>\r\n      <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"searchImg\"\r\n          value={searchImg}\r\n          onChange={onHandleChange}\r\n        />\r\n      </form>\r\n    </SearchbarStyled>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n\r\n// const initialState = {\r\n//   searchImg: '',\r\n// }\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     ...initialState,\r\n//   }\r\n\r\n//   onHandleChange = (e) => {\r\n//     const {name,value} = e.target;\r\n//     this.setState({\r\n//       [name]:value,\r\n//     })\r\n//   }\r\n\r\n//   onHandleSubmit = (e) => {\r\n//     e.preventDefault()\r\n//     this.props.onSubmit(this.state.searchImg);\r\n//     this.setState({\r\n//       ...initialState\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <SearchbarStyled>\r\n//       <form className=\"SearchForm\" onSubmit={this.onHandleSubmit}>\r\n//        <button type=\"submit\" className=\"SearchForm-button\">\r\n//         <span className=\"SearchForm-button-label\">Search</span>\r\n//        </button>\r\n\r\n//       <input\r\n//         className=\"SearchForm-input\"\r\n//         type=\"text\"\r\n//         autoComplete=\"off\"\r\n//         autoFocus\r\n//         placeholder=\"Search images and photos\"\r\n//         name='searchImg'\r\n//         value={this.state.searchImg}\r\n//         onChange={this.onHandleChange}\r\n//       />\r\n//       </form>\r\n//     </SearchbarStyled>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// Searchbar.propTypes = {\r\n//   onSubmit: PropTypes.func,\r\n// };\r\n\r\n// export default Searchbar;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"22368183-bf812a4cdd1e1ebd2a0bd646c\";\r\n\r\nexport const fetchImages = (searchImg, page = 1) => {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?q=${searchImg}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppStyled = styled.div`\r\n  /* display: grid; */\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonStyled = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ButtonStyled } from \"./ButtonStyled\";\r\n\r\nconst Button = ({ onLoadMore }) => {\r\n  return (\r\n    <div className=\"WrapperForBtn\">\r\n      <ButtonStyled type=\"button\" onClick={onLoadMore}>\r\n        Load more\r\n      </ButtonStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalStyled = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n\r\n  .Modal {\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n  }\r\n`;\r\n","import { useEffect, Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { ModalStyled } from \"./ModalStyled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nconst modalScroll = (overflowValue, positionValue) => {\r\n  const body = document.querySelector(\"body\");\r\n  body.style.overflow = overflowValue;\r\n  body.style.position = positionValue;\r\n};\r\n\r\nconst Modal = ({ onCloseModal, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    modalScroll(\"hidden\", \"fixed\");\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      modalScroll(\"auto\", \"relative\");\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <ModalStyled onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </ModalStyled>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onCloseModal: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;\r\n\r\n// const modalRoot = document.querySelector(\"#modal-root\");\r\n\r\n// class Modal extends Component {\r\n//   state = {  }\r\n\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//     const body = document.querySelector(\"body\");\r\n//     body.style.overflow = \"hidden\";\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n//     const body = document.querySelector(\"body\");\r\n//     body.style.overflow = \"auto\";\r\n//   }\r\n\r\n//   handleKeyDown = (e) => {\r\n//     if(e.code === 'Escape') {\r\n//       this.props.onCloseModal()\r\n//     }\r\n//   }\r\n\r\n//   handleBackdropClick = (e) => {\r\n//     if(e.currentTarget === e.target) {\r\n//       this.props.onCloseModal()\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return createPortal (\r\n//       <ModalStyled onClick = {this.handleBackdropClick}>\r\n//         <div className=\"Modal\">\r\n//           {this.props.children}\r\n//         </div>\r\n//       </ModalStyled>, modalRoot\r\n//     );\r\n//   }\r\n// }\r\n\r\n// modalRoot.propTypes = {\r\n//   onCloseModal: PropTypes.func,\r\n//   children: PropTypes.node,\r\n// };\r\n\r\n// export default Modal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoaderComponentStyled = styled.div`\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { LoaderComponentStyled } from \"./LoaderComponentStyled\";\r\n\r\nconst LoaderComponent = () => {\r\n  return (\r\n    <LoaderComponentStyled>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />\r\n    </LoaderComponentStyled>\r\n  );\r\n};\r\n\r\nexport default LoaderComponent;\r\n","import { useState, useEffect } from \"react\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\nimport { fetchImages } from \"../services/api\";\r\nimport { AppStyled } from \"./AppStyled.js\";\r\nimport Button from \"./button/Button\";\r\nimport Modal from \"./modal/Modal\";\r\nimport LoaderComponent from \"./loader/LoaderComponent\";\r\n\r\nconst App = () => {\r\n  const [searchImg, setSearchImg] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [largeImage, setLargeImage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!searchImg) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    fetchImages(searchImg)\r\n      .then((result) => {\r\n        setImages(result.data.hits);\r\n        setPage((prev) => prev + 1);\r\n      })\r\n      .catch((error) => setError(error))\r\n      .finally(() => setIsLoading(false));\r\n  }, [searchImg]);\r\n\r\n  const onSubmit = (searchImg) => {\r\n    if (searchImg !== \"\") setSearchImg(searchImg);\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    setIsLoading(true);\r\n    fetchImages(searchImg, page)\r\n      .then((result) => {\r\n        setImages((prev) => [...prev, ...result.data.hits]);\r\n        setPage((prev) => prev + 1);\r\n      })\r\n      .catch((error) => setError(error))\r\n      .finally(\r\n        () =>\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          }),\r\n        setIsLoading(false)\r\n      );\r\n  };\r\n\r\n  const onOpenModal = (largeImage) => {\r\n    setShowModal(true);\r\n    setLargeImage(largeImage);\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <AppStyled>\r\n      <Searchbar onSubmit={onSubmit} />\r\n      {isLoading ? (\r\n        <LoaderComponent />\r\n      ) : (\r\n        <ImageGallery images={images} onOpenModal={onOpenModal} />\r\n      )}\r\n      {Number.isInteger(images.length / 12) && images.length > 0 && (\r\n        <Button onLoadMore={onLoadMore} />\r\n      )}\r\n      {showModal && (\r\n        <Modal onCloseModal={onCloseModal}>\r\n          <img src={largeImage} alt=\"img\" />\r\n        </Modal>\r\n      )}\r\n    </AppStyled>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// const initialState = {\r\n//   searchImg: '',\r\n//   images:[],\r\n//   largeImage:'',\r\n//   error:'',\r\n//   page: 1,\r\n//   isLoading: false,\r\n//   showModal: false,\r\n// }\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     ...initialState\r\n//    }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if(prevState.searchImg !== this.state.searchImg) {\r\n//       this.setState({isLoading: true})\r\n//       fetchImages(this.state.searchImg).then(result => this.setState(prev => ({\r\n//        images: result.data.hits,\r\n//        page: prev.page + 1,\r\n//       })))\r\n//       .catch((error) => this.state({\r\n//         error,\r\n//       }))\r\n//       .finally(() => this.setState({\r\n//         isLoading: false,\r\n//       }))\r\n//     }\r\n//   }\r\n\r\n//   onSubmit = (searchImg) => {\r\n//     if(searchImg !== '')\r\n//     this.setState({\r\n//       searchImg\r\n//     })\r\n//   }\r\n\r\n//   onLoadMore = () => {\r\n//     this.setState({isLoading: true})\r\n//     fetchImages(this.state.searchImg, this.state.page).then(result => this.setState(prev => ({\r\n//       images: [...prev.images, ...result.data.hits],\r\n//       page: prev.page + 1,\r\n//     })))\r\n//     .catch((error) => this.setState({\r\n//       error,\r\n//     }))\r\n//     .finally(() =>\r\n//       window.scrollTo({\r\n//       top: document.documentElement.scrollHeight,\r\n//       behavior: 'smooth',\r\n//     }),\r\n//       this.setState({isLoading: false,})\r\n//     )\r\n//   }\r\n\r\n//   onOpenModal = (largeImage) => {\r\n//     this.setState({\r\n//       showModal: true,\r\n//       largeImage,\r\n//     })\r\n//   }\r\n\r\n//   onCloseModal = () => {\r\n//     this.setState({\r\n//       showModal: false,\r\n//     })\r\n//   }\r\n\r\n//   render() {\r\n\r\n//    const {images, showModal, largeImage, isLoading} = this.state;\r\n\r\n//     return (\r\n//       <AppStyled>\r\n//         <Searchbar onSubmit={this.onSubmit}/>\r\n//         {isLoading ? <LoaderComponent/> : <ImageGallery images={images} onOpenModal = {this.onOpenModal}/>}\r\n//         {Number.isInteger(images.length / 12) && images.length > 0 && <Button onLoadMore={this.onLoadMore}/>}\r\n//         {showModal &&\r\n//         <Modal onCloseModal = {this.onCloseModal}>\r\n//           <img src={largeImage} alt=\"img\"/>\r\n//         </Modal>}\r\n//       </AppStyled>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  html {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  overflow-x: hidden;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\r\n    Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;\r\n  color: #212121;\r\n  background-color: #fff;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.WrapperForBtn {\r\n  text-align: center;\r\n  margin: 10px 0;\r\n}\r\n\r\n`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <GlobalStyles />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}